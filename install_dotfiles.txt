How to install your dotfiles on a new system, or migrate to this setup.
(Lines starting with $ are commands to run in the terminal.)

There could be weird behaviour if .cfg tries to track itself. 
Avoid recursive issues by adding .cfg to your global Git ignore:

$ echo ".cfg" >> .gitignore

 
Add a --bare flat if you wish you use a bare repo

$ git clone <remote-git-repo-url> $HOME/.cfg


Set up an alias to send Git commands to .cfg, and also set $HOME as the work tree, while storing the Git state at .cfg
$ alias dotfiles='/usr/bin/git --git-dir=<path to .cfg’s Git directory> --work-tree=$HOME'


Set a local configuration in .cfg to ignore untracked files.
$ dotfiles config --local status.showUntrackedFiles no


Checkout the actual content from your .cfg repository to $HOME. Git pulls the tracked files out of the compressed database in the Git directory and places them in the work tree.
$ dotfiles checkout

E.g if you added $HOME/.zsh/aliases to .cfg, that file will be instantiated at that path on your new computer. 


The command `dotfiles checkout` might fail.
Files on your computer might have identical locations and names to files in the .cfg repo. 
Git doesn’t want to overwrite your local files.
Back up the files if they’re useful, delete them if they aren’t.
Run config checkout again until you don’t get any errors.

Your dotfile setup is complete!
